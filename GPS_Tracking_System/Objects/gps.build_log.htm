<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.39.0.0
Copyright (C) 2023 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: ahmed Sallam, srudnet, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.39.0.0
Toolchain Path:  C:\Keil_v5\ARM\ARMCLANG\Bin
C Compiler:      ArmClang.exe V6.21
Assembler:       Armasm.exe V6.21
Linker/Locator:  ArmLink.exe V6.21
Library Manager: ArmAr.exe V6.21
Hex Converter:   FromElf.exe V6.21
CPU DLL:         SARMCM3.DLL V5.39.0.0
Dialog DLL:      DCM.DLL V1.17.5.0
Target DLL:      UL2CM3.DLL V1.164.9.0
Dialog DLL:      TCM.DLL V1.56.4.0
 
<h2>Project:</h2>
D:\embedded\project\project\GPS_Tracking_System\GPS_Tracking_System\gps.uvprojx
Project File Date:  05/15/2024

<h2>Output:</h2>
*** Using Compiler 'V6.21', folder: 'C:\Keil_v5\ARM\ARMCLANG\Bin'
Build target 'Target 1'
compiling EEPROM_Program.c...
compiling Sys_Tick.c...
GPS_Program.c(32): error: call to undeclared function 'length'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
   32 |         for (u8 i = 0; i < length(GPS_Log_Check); i++)
      |                            ^
GPS_Program.c(34): error: call to undeclared function 'UART_u8ReceiveByte'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
   34 |             Local_u8ReceivedChar=UART_u8ReceiveByte(UART0);
      |                                  ^
GPS_Program.c(34): note: did you mean 'UART_u8RecieveByte'?
./UART_Interface.h(105): note: 'UART_u8RecieveByte' declared here
  105 | u8 UART_u8RecieveByte(u8 copy_u8UARTNo);
      |    ^
GPS_Program.c(41): warning: passing 'u8[80]' (aka 'unsigned char[80]') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   41 |     strcpy(GPS, "");
      |            ^~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(77): note: passing argument to parameter here
   77 | extern _ARMABI char *strcpy(char * __restrict /*s1*/, const char * __restrict /*s2*/) __attribute__((__nonnull__(1,2)));
      |                                                     ^
GPS_Program.c(46): error: call to undeclared function 'UART_u8ReceiveByte'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
   46 |         Local_u8ReceivedChar=UART_u8ReceiveByte(UART0);
      |                              ^
GPS_Program.c(59): warning: passing 'u8[80]' (aka 'unsigned char[80]') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   59 |     token = strtok(GPS, ",");
      |                    ^~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(280): note: passing argument to parameter here
  280 | extern _ARMABI char *strtok(char * __restrict /*s1*/, const char * __restrict /*s2*/) __attribute__((__nonnull__(2)));
      |                                                     ^
GPS_Program.c(59): warning: assigning to 'u8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   59 |     token = strtok(GPS, ",");
      |           ^ ~~~~~~~~~~~~~~~~
GPS_Program.c(63): warning: passing 'u8[20]' (aka 'unsigned char[20]') to parameter of type 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   63 |         strcpy(GPS_Formatted[No_Of_Token_Strings++], token);
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(77): note: passing argument to parameter here
   77 | extern _ARMABI char *strcpy(char * __restrict /*s1*/, const char * __restrict /*s2*/) __attribute__((__nonnull__(1,2)));
      |                                                     ^
GPS_Program.c(63): warning: passing 'u8 *' (aka 'unsigned char *') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   63 |         strcpy(GPS_Formatted[No_Of_Token_Strings++], token);
      |                                                      ^~~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(77): note: passing argument to parameter here
   77 | extern _ARMABI char *strcpy(char * __restrict /*s1*/, const char * __restrict /*s2*/) __attribute__((__nonnull__(1,2)));
      |                                                                                     ^
GPS_Program.c(64): warning: assigning to 'u8 *' (aka 'unsigned char *') from 'char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   64 |         token = strtok(NULL, ",");
      |               ^ ~~~~~~~~~~~~~~~~~
GPS_Program.c(67): warning: passing 'u8[20]' (aka 'unsigned char[20]') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   67 |     if (strcmp(GPS_Formatted[1], "A") == 0)
      |                ^~~~~~~~~~~~~~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(125): note: passing argument to parameter here
  125 | extern _ARMABI int strcmp(const char * /*s1*/, const char * /*s2*/) __attribute__((__nonnull__(1,2)));
      |                                              ^
GPS_Program.c(70): warning: passing 'u8[20]' (aka 'unsigned char[20]') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   70 |         if (strcmp(GPS_Formatted[3], "N") == 0)
      |                    ^~~~~~~~~~~~~~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(125): note: passing argument to parameter here
  125 | extern _ARMABI int strcmp(const char * /*s1*/, const char * /*s2*/) __attribute__((__nonnull__(1,2)));
      |                                              ^
GPS_Program.c(71): error: call to undeclared function 'atof'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
   71 |             currentLat = atof(GPS_Formatted[2]);
      |                          ^
GPS_Program.c(75): warning: passing 'u8[20]' (aka 'unsigned char[20]') to parameter of type 'const char *' converts between pointers to integer types where one is of the unique plain 'char' type and the other is not [-Wpointer-sign]
   75 |         if (strcmp(GPS_Formatted[5], "E") == 0)
      |                    ^~~~~~~~~~~~~~~~
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\string.h(125): note: passing argument to parameter here
  125 | extern _ARMABI int strcmp(const char * /*s1*/, const char * /*s2*/) __attribute__((__nonnull__(1,2)));
      |                                              ^
9 warnings and 4 errors generated.
compiling GPS_Program.c...
compiling fonts.c...
compiling GPIO_Program.c...
compiling system_TM4C123.c...
main.c(8): warning: In file included from...
./STD_TYPES.h(30): warning: 'NULL' macro redefined [-Wmacro-redefined]
   30 | #define     NULL        ((void *)0x0)   /**< Null pointer definition */
      |             ^
C:\Keil_v5\ARM\ARMCLANG\Bin\..\include\stdlib.h(76): note: previous definition is here
   76 | #define NULL 0                   /* see <stddef.h> */
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(13): warning: In file included from...
./mcal/../utils/Bit_Math.h(13): warning: 'SET_BIT' macro redefined [-Wmacro-redefined]
   13 | #define SET_BIT(u32Var,BitNo)                                    u32Var |= ((uint32)1<<BitNo)
      |         ^
./BIT_MATH.h(18): note: previous definition is here
   18 | #define SET_BIT(REG, BIT_NUMBER) (REG |= (1 << BIT_NUMBER))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(13): warning: In file included from...
./mcal/../utils/Bit_Math.h(14): warning: 'CLR_BIT' macro redefined [-Wmacro-redefined]
   14 | #define CLR_BIT(u32Var,BitNo)                                    u32Var &= ~((uint32)1<<BitNo)
      |         ^
./BIT_MATH.h(28): note: previous definition is here
   28 | #define CLR_BIT(REG, BIT_NUMBER) REG &= ~(1 << BIT_NUMBER)
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(13): warning: In file included from...
./mcal/../utils/Bit_Math.h(17): warning: 'GET_BIT' macro redefined [-Wmacro-redefined]
   17 | #define GET_BIT(u32Var,BitNo)                                    (u32Var >> BitNo) & (uint32)0x01
      |         ^
./BIT_MATH.h(49): note: previous definition is here
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(123): warning: 'FLASH_FMA_R' macro redefined [-Wmacro-redefined]
  123 | #define FLASH_FMA_R             (*((volatile uint32 *)0x400FD000))
      |         ^
./tm4c123gh6pm.h(2002): note: previous definition is here
 2002 | #define FLASH_FMA_R (*((volatile unsigned long *)0x400FD000))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(124): warning: 'FLASH_FMD_R' macro redefined [-Wmacro-redefined]
  124 | #define FLASH_FMD_R             (*((volatile uint32 *)0x400FD004))
      |         ^
./tm4c123gh6pm.h(2003): note: previous definition is here
 2003 | #define FLASH_FMD_R (*((volatile unsigned long *)0x400FD004))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(125): warning: 'FLASH_FMC_R' macro redefined [-Wmacro-redefined]
  125 | #define FLASH_FMC_R             (*((volatile uint32 *)0x400FD008))
      |         ^
./tm4c123gh6pm.h(2004): note: previous definition is here
 2004 | #define FLASH_FMC_R (*((volatile unsigned long *)0x400FD008))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(127): warning: 'FLASH_FCIM_R' macro redefined [-Wmacro-redefined]
  127 | #define FLASH_FCIM_R            (*((volatile uint32 *)0x400FD010))
      |         ^
./tm4c123gh6pm.h(2006): note: previous definition is here
 2006 | #define FLASH_FCIM_R (*((volatile unsigned long *)0x400FD010))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(129): warning: 'FLASH_FMC2_R' macro redefined [-Wmacro-redefined]
  129 | #define FLASH_FMC2_R            (*((volatile uint32 *)0x400FD020))
      |         ^
./tm4c123gh6pm.h(2008): note: previous definition is here
 2008 | #define FLASH_FMC2_R (*((volatile unsigned long *)0x400FD020))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(130): warning: 'FLASH_FWBVAL_R' macro redefined [-Wmacro-redefined]
  130 | #define FLASH_FWBVAL_R          (*((volatile uint32 *)0x400FD030))
      |         ^
./tm4c123gh6pm.h(2009): note: previous definition is here
 2009 | #define FLASH_FWBVAL_R (*((volatile unsigned long *)0x400FD030))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(131): warning: 'FLASH_FWBN_R' macro redefined [-Wmacro-redefined]
  131 | #define FLASH_FWBN_R            (*((volatile uint32 *)0x400FD100))
      |         ^
./tm4c123gh6pm.h(2010): note: previous definition is here
 2010 | #define FLASH_FWBN_R (*((volatile unsigned long *)0x400FD100))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(132): warning: 'FLASH_FSIZE_R' macro redefined [-Wmacro-redefined]
  132 | #define FLASH_FSIZE_R           (*((volatile uint32 *)0x400FDFC0))
      |         ^
./tm4c123gh6pm.h(2011): note: previous definition is here
 2011 | #define FLASH_FSIZE_R (*((volatile unsigned long *)0x400FDFC0))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(133): warning: 'FLASH_SSIZE_R' macro redefined [-Wmacro-redefined]
  133 | #define FLASH_SSIZE_R           (*((volatile uint32 *)0x400FDFC4))
      |         ^
./tm4c123gh6pm.h(2012): note: previous definition is here
 2012 | #define FLASH_SSIZE_R (*((volatile unsigned long *)0x400FDFC4))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(134): warning: 'FLASH_ROMSWMAP_R' macro redefined [-Wmacro-redefined]
  134 | #define FLASH_ROMSWMAP_R        (*((volatile uint32 *)0x400FDFCC))
      |         ^
./tm4c123gh6pm.h(2013): note: previous definition is here
 2013 | #define FLASH_ROMSWMAP_R (*((volatile unsigned long *)0x400FDFCC))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(135): warning: 'FLASH_RMCTL_R' macro redefined [-Wmacro-redefined]
  135 | #define FLASH_RMCTL_R           (*((volatile uint32 *)0x400FE0F0))
      |         ^
./tm4c123gh6pm.h(2014): note: previous definition is here
 2014 | #define FLASH_RMCTL_R (*((volatile unsigned long *)0x400FE0F0))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(136): warning: 'FLASH_BOOTCFG_R' macro redefined [-Wmacro-redefined]
  136 | #define FLASH_BOOTCFG_R         (*((volatile uint32 *)0x400FE1D0))
      |         ^
./tm4c123gh6pm.h(2015): note: previous definition is here
 2015 | #define FLASH_BOOTCFG_R (*((volatile unsigned long *)0x400FE1D0))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(137): warning: 'FLASH_USERREG0_R' macro redefined [-Wmacro-redefined]
  137 | #define FLASH_USERREG0_R        (*((volatile uint32 *)0x400FE1E0))
      |         ^
./tm4c123gh6pm.h(2016): note: previous definition is here
 2016 | #define FLASH_USERREG0_R (*((volatile unsigned long *)0x400FE1E0))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(138): warning: 'FLASH_USERREG1_R' macro redefined [-Wmacro-redefined]
  138 | #define FLASH_USERREG1_R        (*((volatile uint32 *)0x400FE1E4))
      |         ^
./tm4c123gh6pm.h(2017): note: previous definition is here
 2017 | #define FLASH_USERREG1_R (*((volatile unsigned long *)0x400FE1E4))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(139): warning: 'FLASH_USERREG2_R' macro redefined [-Wmacro-redefined]
  139 | #define FLASH_USERREG2_R        (*((volatile uint32 *)0x400FE1E8))
      |         ^
./tm4c123gh6pm.h(2018): note: previous definition is here
 2018 | #define FLASH_USERREG2_R (*((volatile unsigned long *)0x400FE1E8))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(140): warning: 'FLASH_USERREG3_R' macro redefined [-Wmacro-redefined]
  140 | #define FLASH_USERREG3_R        (*((volatile uint32 *)0x400FE1EC))
      |         ^
./tm4c123gh6pm.h(2019): note: previous definition is here
 2019 | #define FLASH_USERREG3_R (*((volatile unsigned long *)0x400FE1EC))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(141): warning: 'FLASH_FMPRE0_R' macro redefined [-Wmacro-redefined]
  141 | #define FLASH_FMPRE0_R          (*((volatile uint32 *)0x400FE200))
      |         ^
./tm4c123gh6pm.h(2020): note: previous definition is here
 2020 | #define FLASH_FMPRE0_R (*((volatile unsigned long *)0x400FE200))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(142): warning: 'FLASH_FMPRE1_R' macro redefined [-Wmacro-redefined]
  142 | #define FLASH_FMPRE1_R          (*((volatile uint32 *)0x400FE204))
      |         ^
./tm4c123gh6pm.h(2021): note: previous definition is here
 2021 | #define FLASH_FMPRE1_R (*((volatile unsigned long *)0x400FE204))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(143): warning: 'FLASH_FMPRE2_R' macro redefined [-Wmacro-redefined]
  143 | #define FLASH_FMPRE2_R          (*((volatile uint32 *)0x400FE208))
      |         ^
./tm4c123gh6pm.h(2022): note: previous definition is here
 2022 | #define FLASH_FMPRE2_R (*((volatile unsigned long *)0x400FE208))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(144): warning: 'FLASH_FMPRE3_R' macro redefined [-Wmacro-redefined]
  144 | #define FLASH_FMPRE3_R          (*((volatile uint32 *)0x400FE20C))
      |         ^
./tm4c123gh6pm.h(2023): note: previous definition is here
 2023 | #define FLASH_FMPRE3_R (*((volatile unsigned long *)0x400FE20C))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(145): warning: 'FLASH_FMPPE0_R' macro redefined [-Wmacro-redefined]
  145 | #define FLASH_FMPPE0_R          (*((volatile uint32 *)0x400FE400))
      |         ^
./tm4c123gh6pm.h(2024): note: previous definition is here
 2024 | #define FLASH_FMPPE0_R (*((volatile unsigned long *)0x400FE400))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(146): warning: 'FLASH_FMPPE1_R' macro redefined [-Wmacro-redefined]
  146 | #define FLASH_FMPPE1_R          (*((volatile uint32 *)0x400FE404))
      |         ^
./tm4c123gh6pm.h(2025): note: previous definition is here
 2025 | #define FLASH_FMPPE1_R (*((volatile unsigned long *)0x400FE404))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(147): warning: 'FLASH_FMPPE2_R' macro redefined [-Wmacro-redefined]
  147 | #define FLASH_FMPPE2_R          (*((volatile uint32 *)0x400FE408))
      |         ^
./tm4c123gh6pm.h(2026): note: previous definition is here
 2026 | #define FLASH_FMPPE2_R (*((volatile unsigned long *)0x400FE408))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(148): warning: 'FLASH_FMPPE3_R' macro redefined [-Wmacro-redefined]
  148 | #define FLASH_FMPPE3_R          (*((volatile uint32 *)0x400FE40C))
      |         ^
./tm4c123gh6pm.h(2027): note: previous definition is here
 2027 | #define FLASH_FMPPE3_R (*((volatile unsigned long *)0x400FE40C))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(421): warning: 'UART1_DR_R' macro redefined [-Wmacro-redefined]
  421 | #define UART1_DR_R                                 (*((volatile uint32 *)0x4000D000))
      |         ^
./tm4c123gh6pm.h(378): note: previous definition is here
  378 | #define UART1_DR_R (*((volatile unsigned long *)0x4000D000))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(422): warning: 'UART1_RSR_R' macro redefined [-Wmacro-redefined]
  422 | #define UART1_RSR_R                                (*((volatile uint32 *)0x4000D004))
      |         ^
./tm4c123gh6pm.h(379): note: previous definition is here
  379 | #define UART1_RSR_R (*((volatile unsigned long *)0x4000D004))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(423): warning: 'UART1_ECR_R' macro redefined [-Wmacro-redefined]
  423 | #define UART1_ECR_R                                (*((volatile uint32 *)0x4000D004))
      |         ^
./tm4c123gh6pm.h(380): note: previous definition is here
  380 | #define UART1_ECR_R (*((volatile unsigned long *)0x4000D004))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(425): warning: 'UART1_ILPR_R' macro redefined [-Wmacro-redefined]
  425 | #define UART1_ILPR_R                               (*((volatile uint32 *)0x4000D020))
      |         ^
./tm4c123gh6pm.h(382): note: previous definition is here
  382 | #define UART1_ILPR_R (*((volatile unsigned long *)0x4000D020))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(426): warning: 'UART1_IBRD_R' macro redefined [-Wmacro-redefined]
  426 | #define UART1_IBRD_R                               (*((volatile uint32 *)0x4000D024))
      |         ^
./tm4c123gh6pm.h(383): note: previous definition is here
  383 | #define UART1_IBRD_R (*((volatile unsigned long *)0x4000D024))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(427): warning: 'UART1_FBRD_R' macro redefined [-Wmacro-redefined]
  427 | #define UART1_FBRD_R                               (*((volatile uint32 *)0x4000D028))
      |         ^
./tm4c123gh6pm.h(384): note: previous definition is here
  384 | #define UART1_FBRD_R (*((volatile unsigned long *)0x4000D028))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(430): warning: 'UART1_IFLS_R' macro redefined [-Wmacro-redefined]
  430 | #define UART1_IFLS_R                               (*((volatile uint32 *)0x4000D034))
      |         ^
./tm4c123gh6pm.h(387): note: previous definition is here
  387 | #define UART1_IFLS_R (*((volatile unsigned long *)0x4000D034))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(436): warning: 'UART1_9BITADDR_R' macro redefined [-Wmacro-redefined]
  436 | #define UART1_9BITADDR_R                           (*((volatile uint32 *)0x4000D0A4))
      |         ^
./tm4c123gh6pm.h(393): note: previous definition is here
  393 | #define UART1_9BITADDR_R (*((volatile unsigned long *)0x4000D0A4))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(437): warning: 'UART1_9BITAMASK_R' macro redefined [-Wmacro-redefined]
  437 | #define UART1_9BITAMASK_R                          (*((volatile uint32 *)0x4000D0A8))
      |         ^
./tm4c123gh6pm.h(394): note: previous definition is here
  394 | #define UART1_9BITAMASK_R (*((volatile unsigned long *)0x4000D0A8))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(438): warning: 'UART1_PP_R' macro redefined [-Wmacro-redefined]
  438 | #define UART1_PP_R                                 (*((volatile uint32 *)0x4000DFC0))
      |         ^
./tm4c123gh6pm.h(395): note: previous definition is here
  395 | #define UART1_PP_R (*((volatile unsigned long *)0x4000DFC0))
      |         ^
main.c(23): warning: In file included from...
./mcal/mcu_hw.h(439): warning: 'UART1_CC_R' macro redefined [-Wmacro-redefined]
  439 | #define UART1_CC_R                                 (*((volatile uint32 *)0x4000DFC8))
      |         ^
./tm4c123gh6pm.h(396): note: previous definition is here
  396 | #define UART1_CC_R (*((volatile unsigned long *)0x4000DFC8))
      |         ^
main.c(46): error: call to undeclared function 'UART_u8Init'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
   46 |         UART_u8Init(UART0,UART_BDR_9600,UART_DATA_8,UART_PARITY_NONE,UART_STOP_BIT_1);
      |         ^
main.c(46): error: use of undeclared identifier 'UART0'
   46 |         UART_u8Init(UART0,UART_BDR_9600,UART_DATA_8,UART_PARITY_NONE,UART_STOP_BIT_1);
      |                     ^
main.c(46): error: use of undeclared identifier 'UART_BDR_9600'
   46 |         UART_u8Init(UART0,UART_BDR_9600,UART_DATA_8,UART_PARITY_NONE,UART_STOP_BIT_1);
      |                           ^
main.c(46): error: use of undeclared identifier 'UART_DATA_8'
   46 |         UART_u8Init(UART0,UART_BDR_9600,UART_DATA_8,UART_PARITY_NONE,UART_STOP_BIT_1);
      |                                         ^
main.c(46): error: use of undeclared identifier 'UART_PARITY_NONE'
   46 |         UART_u8Init(UART0,UART_BDR_9600,UART_DATA_8,UART_PARITY_NONE,UART_STOP_BIT_1);
      |                                                     ^
main.c(46): error: use of undeclared identifier 'UART_STOP_BIT_1'
   46 |         UART_u8Init(UART0,UART_BDR_9600,UART_DATA_8,UART_PARITY_NONE,UART_STOP_BIT_1);
      |                                                                      ^
main.c(68): error: call to undeclared function 'UART_u8RecieveByte'; ISO C99 and later do not support implicit function declarations [-Wimplicit-function-declaration]
   68 |                         if(UART_u8RecieveByte(UART0) == 'U'){
      |                            ^
main.c(68): error: use of undeclared identifier 'UART0'
   68 |                         if(UART_u8RecieveByte(UART0) == 'U'){
      |                                               ^
39 warnings and 8 errors generated.
compiling main.c...
UART_Program.c(589): warning: shift count >= width of type [-Wshift-count-overflow]
  589 |         if (!GET_BIT(UART0_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(589): warning: shift count >= width of type [-Wshift-count-overflow]
  589 |         if (!GET_BIT(UART0_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(593): warning: shift count >= width of type [-Wshift-count-overflow]
  593 |         if (!GET_BIT(UART1_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(593): warning: shift count >= width of type [-Wshift-count-overflow]
  593 |         if (!GET_BIT(UART1_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(597): warning: shift count >= width of type [-Wshift-count-overflow]
  597 |         if (!GET_BIT(UART2_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(597): warning: shift count >= width of type [-Wshift-count-overflow]
  597 |         if (!GET_BIT(UART2_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(601): warning: shift count >= width of type [-Wshift-count-overflow]
  601 |         if (!GET_BIT(UART6_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(601): warning: shift count >= width of type [-Wshift-count-overflow]
  601 |         if (!GET_BIT(UART6_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(605): warning: shift count >= width of type [-Wshift-count-overflow]
  605 |         if (!GET_BIT(UART7_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(605): warning: shift count >= width of type [-Wshift-count-overflow]
  605 |         if (!GET_BIT(UART7_FR_R, UART_FR_TXFF))
      |              ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(796): warning: '/*' within block comment [-Wcomment]
  796 |                 /*
      |                 ^
UART_Program.c(663): warning: shift count >= width of type [-Wshift-count-overflow]
  663 |         while (!GET_BIT(UART0_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(663): warning: shift count >= width of type [-Wshift-count-overflow]
  663 |         while (!GET_BIT(UART0_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(670): warning: shift count >= width of type [-Wshift-count-overflow]
  670 |         while (!GET_BIT(UART1_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(670): warning: shift count >= width of type [-Wshift-count-overflow]
  670 |         while (!GET_BIT(UART1_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(677): warning: shift count >= width of type [-Wshift-count-overflow]
  677 |         while (!GET_BIT(UART2_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(677): warning: shift count >= width of type [-Wshift-count-overflow]
  677 |         while (!GET_BIT(UART2_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(684): warning: shift count >= width of type [-Wshift-count-overflow]
  684 |         while (!GET_BIT(UART3_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(684): warning: shift count >= width of type [-Wshift-count-overflow]
  684 |         while (!GET_BIT(UART3_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(691): warning: shift count >= width of type [-Wshift-count-overflow]
  691 |         while (!GET_BIT(UART4_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(691): warning: shift count >= width of type [-Wshift-count-overflow]
  691 |         while (!GET_BIT(UART4_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(698): warning: shift count >= width of type [-Wshift-count-overflow]
  698 |         while (!GET_BIT(UART5_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(698): warning: shift count >= width of type [-Wshift-count-overflow]
  698 |         while (!GET_BIT(UART5_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(705): warning: shift count >= width of type [-Wshift-count-overflow]
  705 |         while (!GET_BIT(UART6_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(705): warning: shift count >= width of type [-Wshift-count-overflow]
  705 |         while (!GET_BIT(UART6_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
UART_Program.c(712): warning: shift count >= width of type [-Wshift-count-overflow]
  712 |         while (!GET_BIT(UART7_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                             ^  ~~~~~~~~~~
UART_Program.c(712): warning: shift count >= width of type [-Wshift-count-overflow]
  712 |         while (!GET_BIT(UART7_FR_R, UART_FR_TXFF) && *copy_pu8String != '\0')
      |                 ^                   ~~~~~~~~~~~~
./BIT_MATH.h(49): note: expanded from macro 'GET_BIT'
   49 | #define GET_BIT(REG, BIT_NUMBER) ((REG & (1 << BIT_NUMBER)) >> BIT_NUMBER)
      |                                                             ^  ~~~~~~~~~~
27 warnings generated.
compiling UART_Program.c...
".\Objects\gps.axf" - 12 Error(s), 75 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                https://www.keil.com/pack/ARM.CMSIS.6.0.0.pack
                ARM::CMSIS@6.0.0
                CMSIS (Common Microcontroller Software Interface Standard)
   * Component: CORE Version: 6.0.0

Package Vendor: Keil
                http://www.keil.com/pack/Keil.TM4C_DFP.1.1.0.pack
                Keil::TM4C_DFP@1.1.0
                Texas Instruments Tiva C Series Device Support and Examples
   * Component: Startup Version: 1.0.1

<h2>Collection of Component include folders:</h2>
  ./RTE/_Target_1
  C:/Users/ahmed/AppData/Local/Arm/Packs/ARM/CMSIS/6.0.0/CMSIS/Core/Include
  C:/Users/ahmed/AppData/Local/Arm/Packs/Keil/TM4C_DFP/1.1.0/Device/Include/TM4C123

<h2>Collection of Component Files used:</h2>

   * Component: ARM::CMSIS:CORE@6.0.0

   * Component: Keil::Device:Startup@1.0.1
      Include file:  Device/Include/TM4C123/TM4C123.h
      Source file:   Device/Source/ARM/startup_TM4C123.s
      Source file:   Device/Source/system_TM4C123.c
Target not created.
Build Time Elapsed:  00:00:03
</pre>
</body>
</html>
